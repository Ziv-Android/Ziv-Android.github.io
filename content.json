{"meta":{"title":"Ziv‘s blog","subtitle":"Floating","description":"Summary knowledge to share.","author":"ZhaoPeng","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"MarkDown速学笔记","slug":"MarkDown速学笔记","date":"2017-05-09T16:00:30.000Z","updated":"2017-05-09T16:40:41.427Z","comments":true,"path":"2017/05/10/MarkDown速学笔记/","link":"","permalink":"http://yoursite.com/2017/05/10/MarkDown速学笔记/","excerpt":"","text":"献给想要快速使用MarkDown又不想花时间的各位 基础区 段落的前后必须是空行 段落内换行使用 一级标题===，二级标题— 对称使用#同样表示标题 >表示引用，多行引用每一行都要加，&gt;&gt;表示引用嵌套 无序列表使用*,+,-注意符号后的空格不能省略 有序列表数字.空格，数字不影响顺序，但建议按顺序来 有序无序可相互嵌套 数字.用来显示点取消列表显示 代码块表示方法一： HelloWorld 行内代码Hello World 分割线___ *** &lt;hr&gt; 超链接&lt;邮箱或较短链接&gt;或者以下格式便于统一管理Google 图像或使用以下标准 Markdown 不支持指定图片的显示大小，不过可以通过直接插入标签来指定相关属性： 强调，符号之间不能有空白，需要显示的内容包含*或_时，使用\\*和\\_斜体1 斜体2 斜体3加粗1 加粗2 加粗3 转义字符 \\ ` * _ {} [] () # + - . ! 高级区 删除线hahaha 代码快语法高亮 12345class Hello&#123; int main()&#123; printf(\"aaaaa\"); &#125;&#125; 表格| 符号 | 对齐方式 || —- | —- || :— | 左对齐 || :–: | 居中对齐 || -– | 右对齐 | 任务列表Task List [ ] Eat [x] Code [x] HTML [x] CSS [x] JavaScript [ ] Sleep 记得空行哦","categories":[{"name":"Utils","slug":"Utils","permalink":"http://yoursite.com/categories/Utils/"}],"tags":[]},{"title":"统一建模工具UML(Unified Modeling Langage)","slug":"Ubuntu安装StarUML","date":"2017-05-04T16:00:30.000Z","updated":"2017-05-09T16:41:23.627Z","comments":true,"path":"2017/05/05/Ubuntu安装StarUML/","link":"","permalink":"http://yoursite.com/2017/05/05/Ubuntu安装StarUML/","excerpt":"","text":"UML是一种通用的建模语言，适用与一般系统和并行、分布式系统。 1. 用例图(Use Case Diagram)从用户的角度描述系统功能，并指各功能的操作者，描述用户需求 2. 静态图2.1 类图(Class Diagram)描述系统中类的静态结构 2.2 包图(Package Diagram)包和类组成，描述包与包之间的关系，描述系统的分层结构 2.3 对象图(Object Diagram)类图的实例 3. 行为图描述系统动态模型和对象组成的交互关系 3.1 活动图(Activity Diagram)业务实现用例的工作流程，描述一组顺序或并发的活动 3.2 状态图(Statechart Diagram)描述状态到状态控制流(状态转移条件)，常用与动态建模 4. 交互图对象之间的交互关系 4.1 顺序图(Sequence Diagram 时序图)对象之间的动态合作关系，强调对象发送消息的顺序，同时显示对象之间的交互 4.2 合作图(Communication Diagram 通信图)对象之间的协助关系 5. 实现图5.1 配置图(Deployment Diagram 部署图)定义系统中软硬件的物理体系结构 #starUML提供的其他图 复合结构图(Composite Structure Diagram)组件图(Component Diagram)简介图(Profile Diagram)实体-联系图(Entity Relationship Diagram)ER Diagram，常用于数据库设计矩形框：表示实体，在框中记入实体名。菱形框：表示联系，在框中记入联系名。椭圆形框：表示实体或联系的属性，将属性名记入框中。对于主属性名，则在其名称下划一下划线。连线：实体与属性之间；实体与联系之间；联系与属性之间用直线相连，并在直线上标注联系的类型。（对于一对一联系，要在两个实体连线方向各写1； 对于一对多联系，要在一的一方写1，多的一方写N；对于多对多关系，则要在两个实体连线方向各写N,M。) 流程图(Flowchart Diagram)模型 功能模型[用例图]：从用户的角度描述系统功能。 对象模型[静态图]：采用对象，属性，操作，关联等概念展示系统的结构和基础。 动态模型[行为图]：展现系统内部行为。 StarUML的安装进入官网下载页选择下载对应版本的StarUML，由于StarUML依赖于 libgcrypt11，所以安装过程中会提示缺少libgcrypt11，下载 文件并执行12sudo dpkg -i libgcrypt11_1.5.3-2ubuntu4.4_amd64.debsudo apkg -i StarUML-v2.7.0-64-bit.deb 完成安装 基本Class之间的关系Association 关联Directed Association 有向关联Aggregation 聚合Composition 组成Dependency 依赖Generalization 概括Interface Realization 接口实现 正版破解Linux安装完成后，在/opt/staruml/www/license/node路径下有他一个LicenseManagerDomain.js文件，使用sodu权限打开123456789101112131415161718192021222324252627282930function validate(PK, name, product, licenseKey) &#123; var pk, decrypted; // edit by yourName return &#123; name: \"yourName\", product: \"StarUML\", licenseType: \"vip\", quantity: \"ziv-android.github.io\", licenseKey: \"\" &#125;; try &#123; pk = new NodeRSA(PK); decrypted = pk.decrypt(licenseKey, 'utf8'); &#125; catch (err) &#123; return false; &#125; var terms = decrypted.trim().split(\"\\n\"); if (terms[0] === name &amp;&amp; terms[1] === product) &#123; return &#123; name: name, product: product, licenseType: terms[2], quantity: terms[3], licenseKey: licenseKey &#125;; &#125; else &#123; return false; &#125; &#125; 保存退出，然后在starUML软件中Help–&gt;Enter License输入yourName回车即可完成破解注册","categories":[{"name":"Utils","slug":"Utils","permalink":"http://yoursite.com/categories/Utils/"}],"tags":[]},{"title":"Create The Blog For Free","slug":"使用Node.js+Hexo+GitHub搭建个人Blog心得","date":"2017-04-24T16:30:30.000Z","updated":"2017-04-24T16:40:19.784Z","comments":true,"path":"2017/04/25/使用Node.js+Hexo+GitHub搭建个人Blog心得/","link":"","permalink":"http://yoursite.com/2017/04/25/使用Node.js+Hexo+GitHub搭建个人Blog心得/","excerpt":"","text":"Node.js首先官网安装Node.js这是一切的根本，我们要使用npm命令安装Hexo以及需要依赖的插件。 Hexo同样访问官网获取最新的Hexo框架执行命令12345$ npm install hexo-cli -g$ hexo init blog$ cd blog$ npm install$ hexo server 恭喜你已经可以可通过 http://localhost:4000/ 查看本地静态Blog GitHub相关注册帐号上传ssh-key，并测试12$ ssh-keygen -t rsa -C \"你的GitHub注册邮箱\"$ ssh -T git@github.com 创建代码仓库 用户名.github.io 注意一定要使用用户名创建开启GitHub Pages功能 安装插件npm install hexo-deployer-git --save 配置插件在_config.yml中查找到”deploy”添加如下配置信息12345678910111213141516171819202122232425# You can use this:deploy: type: git repo: &lt;repository url&gt; branch: [branch] message: [message] name: [git user] email: [git email] extend_dirs: [extend directory] ignore_hidden: false # default is true# or this:deploy: type: git message: [message] repo: github: &lt;repository url&gt;,[branch] coding: &lt;repository url&gt;,[branch] extend_dirs: - [extend directory] - [another extend directory] ignore_hidden: public: false [extend directory]: true [another extend directory]: false 一般只写type，repo和branch信息即可，message使用默认日期信息 Blog更新只需在Bash下执行以下命令即可，插件会帮助我们同步到我们对应的Git下12$ hexo g #hexo generate$ hexo d #hexo deploy 主题替换下载喜欢的主题保存在Hexo目录下的themes文件夹下，修改_config.yml文件中的”theme”为你下载的文件目录名，执行123$ hexo clean$ hexo g$ hexo d 注意：主题的替换有可能会导致需要安装新的hexo插件，详情可以参考对应主题的README信息安装即可，官方主题地址 域名的注册由于我只是个人笔记的整理记录与分享，并未考虑注册域名，所以之后的步骤本人并未尝试，想玩的玩家请参考致谢中的步骤即可，谢谢…… 致谢https://xuanwo.org/2015/03/26/hexo-intor/http://www.jianshu.com/p/f4cc5866946bhttp://blog.liuxianan.com/build-blog-website-by-hexo-github.html#shi-yong-hexo-xie-bo-ke","categories":[{"name":"Utils","slug":"Utils","permalink":"http://yoursite.com/categories/Utils/"}],"tags":[]}]}